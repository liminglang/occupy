<style>
  .container{
    position:absolute;
    top:0;
    bottom:0;
    left:0;
    right:0;
    display:flex;
    flex-direction:column;
    align-items:center;
    justify-content:space-between;
    box-sizing:border-box;
  }
  .circleBar {
  width: 100%;
  overflow: hidden;
  position: relative;
  margin-bottom:70px;
  }
  
  .cir {
    display: inline-block;
    background-color: #fff;
    border-radius: 100%;
  }
  
  .top {
    text-align: center;
  }
  .button{
    position: fixed;
    top: 0;
    left: 10px;
  }
  .button2{
    position: fixed;
    bottom: 20px;
  }
  .centerWord {
    width: 100%;
    position: absolute;
    top: 40px;
    left: 0;
    text-align: center;
    color: #3686ff;
  }
  .b {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  .a{
    display: flex;
    width: 100%;
  }
  .image{
    width: 100px;
    height: 100px;
    margin-top: 10px;
  }
  .modal-mask {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background: #000;
    opacity: 0.5;
    overflow: hidden;
    z-index: 9000;
    color: #fff;
  }

.modal-dialog {
  width: 70%;
  overflow: hidden;
  position: fixed;
  top: 70%;
  left: 0;
  z-index: 9999;
  background: #f9f9f9;
  margin: -180rpx 105rpx;
  border-radius: 36rpx;
}
</style>
<template>
  <view class='container'>
    <ecCanvas id='mychart-dom-area' :canvasId.sync='canvasId' :ec.sync='ec'></ecCanvas>
    <button class='button' @tap="editTrace">编辑我的足迹</button>
    <!-- <view class='circleBar'>
        <view class="top">
          <canvas class="cir" style=' width:100%; height:180px;' canvas-id="canvasArc"></canvas>
          <view class="centerWord">{{resultComment}}</view>
      </view>
      
      <view class="b" style='width:100%'>
        <button class='button2' @tap='share'>分享我的足迹</button>
      </view>
    </view> -->
    <view class="b" style='width:100%'>
        <button class='button2' @tap='share'>分享我的足迹</button>
    </view>
    <!-- <canvas class="cir" style=' width:100%; height:180px;' canvas-id="canvasArc"></canvas> -->
    <view class="modal-mask" @tap="hideModal" catchtouchmove="preventTouchMove" wx:if="{{showModal}}"></view>
    <view class="modal-dialog" wx:if="{{showModal}}">
      <view class='a'>
        <button open-type="share"><image class='image' src='/static/images/weixin.jpg' ></image>发生给好友</button>
        <button @tap='savePhoto'><image class='image' src='/static/images/friend.jpg'></image>保存到手机</button>
      </view>
    </view>
  </view>
</template> 

<script>
    import wepy from 'wepy';
    import 'wepy-async-function'
    import { baseUrl, appId} from '@/config'
    import req from '@/network'
    import _ from 'underscore'
    import EcCanvas from '../ec-canvas/ec-canvas';
    import * as echarts from '../ec-canvas/echarts.min';
    import geoJson from '../static/data/china.js';
    export default class PieChartPage extends wepy.page {
      config = {
          navigationBarTitleText: '我的足迹'
      };
      components = {
          ecCanvas: EcCanvas
      };
      data = {
          canvasId: 'myMap',
          showModal:false,
          echart:'',
          ec: {
              onInit: this.initChart,
              myChart:''
          },
          geoCoordMap:[],
      };
      
      onLoad() {
        
        this.$apply();
        console.log("ec========",this.ec)
      }
      onShareAppMessage(res) {
        let title = "足迹占领";
        let path = `pages/index`
        return {
          title: title,
          path: path
        };
      }
      async initChart(canvas, width, height,userId) {
        wx.showLoading({
          title: '加载中',
        })
        console.log("width,height========",width,height)
        let self = this;
        let height1 = wepy.getSystemInfoSync().windowHeight
        let width1 = wepy.getSystemInfoSync().windowWidth
        var mapFeatures = geoJson.features;
        let geoCoordMap = []
        let url = baseUrl + `/trace/getMyTraces?userId=${userId}`;
        const traces = await req.get(url).catch((err)=>{
          console.log("updateAvatarError...", err.data)})
        let provinces = [];
        if (traces.data) {
          let data = traces.data.data;
          console.log("data============",data)
          for(var i=0;i<data.length;i++) {
            let marker = {};
            let province = {};
            marker['id'] = data[i].id
            marker['value'] = [data[i].longitude,data[i].latitude]
            province['name'] = data[i].province.substring(0,data[i].province.length-1);
            geoCoordMap.push(marker);
            provinces.push(province)
          }
        }
        let cityCount =  _.size(_.groupBy(traces.data.data,function(obj){return obj.city}));
        let provinceCount =  _.size(_.groupBy(traces.data.data,function(obj){return obj.province}));
        const chart = echarts.init(canvas, null, {
            width: width,
            height: height
        });
        canvas.setChart(chart);
        echarts.registerMap('china', geoJson);
        const option = {
          tooltip: {
            trigger: 'item'
          },
          geo: {
            show: true,
            map: 'china',
            label: {
                normal: {
                    show: false
                },
                emphasis: {
                    show: false,
                }
            },
            roam: true,
            itemStyle: {
                normal: {
                    areaColor: '#031525',
                    borderColor: '#3B5077',
                },
                emphasis: {
                    areaColor: '#2B91B7',
                }
            }
          },
          series: [{
            type: 'map',
            mapType: 'china',
            symbol: 'pin', //气泡
            symbolSize:3,
            label: {
                show: false
            },
            itemStyle: {
                normal: {
                    borderColor: 'grey',
                    areaColor: '#2678b2',
                    label: {
                        show: false
                    }
                },
                emphasis: {
                    areaColor: 'yellow',
                    label: {
                        show: false
                    }
                }
            },
            data: provinces
          },
          {
            name: '散点',
            type: 'scatter',
            coordinateSystem: 'geo',
            data: geoCoordMap,
            label: {
                normal: {
                    formatter: '{b}',
                    position: 'right',
                    show: true
                },
                emphasis: {
                    show: true
                }
            },
            itemStyle: {
                normal: {
                    color: '#05C3F9'
                }
            }
          },
          {
            name:'省份',
            type:'pie',
            radius: ['17%', '20%'],
            center:['25%','85%'],
            avoidLabelOverlap: false,
            hoverAnimation:false,
            label: {
                normal: {
                    show: true,
                    color: '#fb8800',
                    formatter:function (params){
                        return "省份\n" + provinceCount
                    },
                    position: 'center',
                    textStyle: {
                       fontSize: '16',
                        fontWeight: 'bold'
                     }
                }
            },
            data:[
                {value:provinceCount, name:'省份'},
                {value:34-provinceCount, name:''}
                ]
          },
          {
            name:'城市',
            type:'pie',
            radius: ['17%', '20%'],
            center:['75%','85%'],
            avoidLabelOverlap: false,
            hoverAnimation:false,
            label: {
                normal: {
                    show: true,
                    color: '#fb8800',
                    formatter:function (params){
                        return "城市\n" + cityCount
                    },
                    position: 'center',
                    textStyle: {
                       fontSize: '16',
                        fontWeight: 'bold'
                     }
                }
            },
            data:[
                {value:cityCount, name:'城市'},
                {value:100-cityCount, name:''}
                ]
          },
          {
            name:'',
            type:'pie',
            radius: ['22%', '25%'],
            center:['50%','85%'],
            avoidLabelOverlap: false,
            hoverAnimation:false,
            label: {
                normal: {
                    show: true,
                    color: '#fb8800',
                    formatter:function (params){
                        return "超过了\n" + "80%\n" +"的小伙伴"
                    },
                    position: 'center',
                    textStyle: {
                       fontSize: '16',
                        fontWeight: 'bold'
                     }
                }
            },
            data:[
                {value:80, name:'省份'},
                {value:100-80, name:''}
                ]
          },
          ],
        color: ['#339900', '#C9C9C9']
        };
        var count = 0;
        var timeTicket = null;
        var dataLength = option.series[0].data.length;
        timeTicket && clearInterval(timeTicket);
        timeTicket = setInterval(function() {
            chart.dispatchAction({
                type: 'highlight',
                seriesIndex: 0,
                dataIndex: (count) % dataLength
            });
            count++;
        }, 100);
        chart.setOption(option);
        let ctx = chart._dom.ctx;
        ctx.draw(true);
        wx.hideLoading();
       // return chart;
        }
      preventTouchMove() {
        }
      methods = {
        editTrace(){
          wx.navigateTo({url: 'edittrace'})
        },
        hideModal(){
          this.showModal = false;
          this.$apply();
        },
        share(){
          this.showModal = true;
          this.$apply();
        },
        savePhoto(){
         let height1 = wepy.getSystemInfoSync().windowHeight
         let width1 = wepy.getSystemInfoSync().windowWidth
         setTimeout(async () => {
          wx.canvasToTempFilePath({
            x:0,
            y:70,
            width:width1,
            height:height1-70,
            destWidth:width1,
            destHeight:height1-70,
            fileType:'jpg',
            quality:1,
            canvasId: 'myMap',
            success: function(res) {
              wx.saveImageToPhotosAlbum({
                filePath:res.tempFilePath,
                success(res) {
                  wx.showToast({
                    title: "已保存至相册",
                    icon: "none"
                  });
                }
              })
            },
            fail: function(res) {
              console.log("err==================",res.errMsg)
            }
          })
        }, 1000)
        }
      }
    }
</script>

