<template>
  <view class='container'>
    <ecCanvas id='mychart-dom-area' :canvasId.sync='canvasId' :ec.sync='ec'></ecCanvas>
    <view class='circleBar'>
      <view class="wrap">
        <view class="top">
          <canvas class="cir" style=' width:100%; height:180px;' canvas-id="canvasArc"></canvas>
          <view class="centerWord">{{resultComment}}</view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
    import wepy from 'wepy';
    import { baseUrl, appId} from '@/config'
    import req from '@/network'
    import EcCanvas from '../ec-canvas/ec-canvas';
    import * as echarts from '../ec-canvas/echarts.min';
    import geoJson from '../static/data/china.js';
    export default class PieChartPage extends wepy.page {
      config = {
          navigationBarTitleText: '我的足迹'
      };
      components = {
          ecCanvas: EcCanvas
      };
      data = {
          canvasId: 'myMap',
          ec: {
              userId:this.userId,
              onInit: this.initChart
          },
          geoCoordMap:[],
      };
      
      onLoad() {
        this.userId = this.$parent.globalData.user.id;
        let cxt_arc = wx.createCanvasContext('canvasArc');//创建并返回绘图上下文context对象。
        const width = wepy.getSystemInfoSync().windowWidth;
        cxt_arc.setLineWidth(6);//绘线的宽度
        cxt_arc.setStrokeStyle('#d2d2d2');//绘线的颜色
        cxt_arc.setLineCap('round');//线条端点样式
        cxt_arc.beginPath();//开始一个新的路径
        cxt_arc.arc(width/2, 53, 45, 0, 2 * Math.PI, false);//设置一个原点(53,53)，半径为50的圆的路径到当前路径
        cxt_arc.closePath()
        cxt_arc.stroke();//对当前路径进行描边
        cxt_arc.beginPath();//开始一个新的路径
        cxt_arc.arc(width/2-95, 53, 40, 0, 2 * Math.PI, false);//设置一个原点(53,53)，半径为50的圆的路径到当前路径
        cxt_arc.closePath()
        cxt_arc.stroke();//对当前路径进行描边
        cxt_arc.beginPath();//开始一个新的路径
        cxt_arc.arc(width/2+95, 53, 40, 0, 2 * Math.PI, false);//设置一个原点(53,53)，半径为50的圆的路径到当前路径
        cxt_arc.closePath()
        cxt_arc.stroke();//对当前路径进行描边
        //cxt_arc.stroke();//对当前路径进行描边
        //这部分是蓝色部分
        cxt_arc.beginPath();//开始一个新的路径
        cxt_arc.setLineWidth(6);
        cxt_arc.setStrokeStyle('#3ea6ff');
        cxt_arc.setLineCap('round')
        cxt_arc.arc(width/2, 53, 45, -Math.PI * 1 / 2, 2 * Math.PI * 0.8 - Math.PI * 1 / 2, false);
        cxt_arc.stroke();//对当前路径进行描边
        cxt_arc.beginPath();//开始一个新的路径
        cxt_arc.arc(width/2-95, 53, 40, -Math.PI * 1 / 2, 2 * Math.PI * 0.8 - Math.PI * 1 / 2, false);
        cxt_arc.stroke();//对当前路径进行描边
        cxt_arc.beginPath();//开始一个新的路径
        cxt_arc.arc(width/2+95, 53, 40, -Math.PI * 1 / 2, 2 * Math.PI * 0.8 - Math.PI * 1 / 2, false);
        cxt_arc.stroke();//对当前路径进行描边
        cxt_arc.draw()
        this.$apply();
      }
      async initChart(canvas, width, height,userId) {
        let self = this
        var mapFeatures = geoJson.features;
        let geoCoordMap = []
        // mapFeatures.forEach(function(v) {
        //   geoCoordMap.push({
        //     id :v.id,
        //     // 地区经纬度
        //     value: v.properties.cp
        //   })
        //   // 地区名称
          

        // });
        let url = baseUrl + `/trace/getMyTraces?userId=${userId}`;
        const traces = await req.get(url).catch((err)=>{
          console.log("updateAvatarError...", err.data)})
        // this.geoCoordMap = geoCoordMap
        // this.$apply();
        console.log(traces,"****************");
        if (traces.data) {
          let data = traces.data.data;
          for(var i=0;i<data.length;i++) {
            let marker = {};
            marker['id'] = data[i].id
            marker['value'] = [data[i].longitude,data[i].latitude]
            geoCoordMap.push(marker);
          }
        }
        console.log(geoCoordMap)
        const chart = echarts.init(canvas, null, {
            width: width,
            height: height
        });
        canvas.setChart(chart);
        echarts.registerMap('china', geoJson);
        const option = {
          title: {
            text: '我的足迹',
            left: 'center',
            textStyle: {
                color: '#044161'
            }
          },
          tooltip: {
            trigger: 'item'
          },

          toolbox: {
            show: true,
            orient: 'vertical',
            left: 'right',
            top: 'center',
            feature: {
              dataView: { readOnly: false },
              restore: {},
              saveAsImage: {}
            }
          },
          geo: {
            show: true,
            map: 'china',
            label: {
                normal: {
                    show: false
                },
                emphasis: {
                    show: false,
                }
            },
            roam: true,
            itemStyle: {
                normal: {
                    areaColor: '#031525',
                    borderColor: '#3B5077',
                },
                emphasis: {
                    areaColor: '#2B91B7',
                }
            }
          },
          series: [{
            type: 'map',
            mapType: 'china',
            label: {
              normal: {
                show: true
              },
              emphasis: {
                textStyle: {
                  color: 'yellow'
                }
              }
            },
            itemStyle: {

              normal: {
                borderColor: '#389BB7',
                areaColor: '#fff',
              },
              emphasis: {
                areaColor: 'lightskyblue',
                borderWidth: 0
              }
            },
            animation: false
          },
          {
            name: '散点',
            type: 'scatter',
            coordinateSystem: 'geo',
            data: geoCoordMap,
            label: {
                normal: {
                    formatter: '{b}',
                    position: 'right',
                    show: true
                },
                emphasis: {
                    show: true
                }
            },
            itemStyle: {
                normal: {
                    color: '#05C3F9'
                }
            }
          }
          // {
          //   type: 'map',
          //   map: 'china',
          //   geoIndex: 0,
          //   aspectScale: 0.75, //长宽比
          //   showLegendSymbol: false, // 存在legend时显示
          //   label: {
          //       normal: {
          //           show: true
          //       },
          //       emphasis: {
          //           show: false,
          //           textStyle: {
          //               color: '#fff'
          //           }
          //       }
          //   },
          //   roam: true,
          //   itemStyle: {
          //       normal: {
          //           areaColor: '#031525',
          //           borderColor: '#3B5077',
          //       },
          //       emphasis: {
          //           areaColor: '#2B91B7'
          //       }
          //   },
          //   animation: false,
          //   data: data
          // }
        //   {
        //     name: 'pm2.5',
        //     type: 'scatter',
        //     coordinateSystem: 'bmap',
        //     data: [{name:'海门',value:[121.15, 31.89, 9]},{name:'大庆',value:[125.03, 46.58, 279]}],
        //     label: {
        //         normal: {
        //             formatter: '{b}',
        //             position: 'right',
        //             show: false
        //         },
        //         emphasis: {
        //             show: true
        //         }
        //     },
        //     itemStyle: {
        //         normal: {
        //             color: '#ddb926'
        //         }
        //     }
        // },
          ],

        };
        chart.setOption(option);
        return chart;
        }
    }
</script>

<style>
  .container{
    position:absolute;
    top:0;
    bottom:0;
    left:0;
    right:0;
    display:flex;
    flex-direction:column;
    align-items:center;
    justify-content:space-between;
    box-sizing:border-box;
  }
  .circleBar {
  width: 100%;
  height: auto;
  overflow: hidden;
  position: relative;
  }
  
  .cir {
    display: inline-block;
    background-color: #fff;
    border-radius: 100%;
  }
  
  .top {
    text-align: center;
  }
  
  .centerWord {
    width: 100%;
    position: absolute;
    top: 40px;
    left: 0;
    text-align: center;
    color: #3686ff;
  }
</style>
