<style lang="less">
  .photo {
    margin-top: 20px;
    width:60%;
    height:150px;
    margin-left: auto; margin-right: auto;
    border:solid 1px #000;
  }
  
  .gps {
    height: 30px;
    width: 30px;
  }
  .image {
    width: 100px;
    height: 100px;
    border-radius: 50%;
  }
  .content {
    flex: 1;
    margin-left: 10px;
    text-overflow:ellipsis;
  }
  .declaration {
    flex: 1;
    margin-left: 10px;
    text-overflow:ellipsis;
    width:50px;
    overflow: hidden;
    text-overflow:ellipsis;
    white-space: nowrap;
  }
  .location{
    flex: 1;
    margin-left: 10px;
    display:inline-block;
    color:#c1c40d
  }
  .text {
    display:inline-block;
    margin-left: 10px;
  }
 .heart{
    display:inline-block;
    margin-right: 30px;
    height: 25px;
    width: 25px;
  }
  .button {
    display: flex;
    flex-direction: column;
    align-items: center;
    display:inline;
    background-color: #ffffff;
    margin-left: 30px;
  }
  .up-pic {
    width: 100%;
    justify-content: center;
  }
  .pic-box{  
    margin-top:20rpx;  
    flex-flow:wrap;  
    width:95%;   
  } 
  .ap-box{  
    position: relative;  
  }
  .add-pic{  
    width: 160rpx;  
    height: 160rpx;  
    margin-right: 20rpx;  
    position: relative;  
    margin: 20rpx 30rpx 20rpx 30rpx;  
  } 
  .img-de{  
    width:45rpx;  
    height:45rpx;  
    border-radius:50%;  
    position:absolute;  
    right:-41rpx;  
    top:5rpx;  
  }
</style>
<template>
    <view>
     <image class="image" mode="aspectFit" src="{{avatar}}"></image>
      <view class='text'>
        <view class='content'>{{name}}</view>
        <view class='content'>
          <view class='declaration'>{{declaration}}</view>
          <image class="heart" mode="aspectFit" src="/static/images/heart.png" @tap='changeParisecount({{id}})'></image>
          <view style='display:inline-block;margin-left:5px;'>{{parisecount}}</view>
        </view>
        <image class="gps" src="/static/images/address.png"></image>
        <view class='location'>{{scenic}}</view>
        <view class='text'>第{{number}}个占领者</view>
      </view>
      <view class='up-pic'>
        <view class='flex pic-box'>
          <block wx:key="imgbox" wx:for="{{imgbox}}">
            <view class='ap-box'>
              <view class='add-pic'>
                <image class='add-pic' src='{{item}}'></image>
              </view>
            </view>
          </block>
        </view>
      </view>
      <view>
        <block wx:if="{{isOwner}}">
          <button class="button" open-type="share">分享给好友</button>
          <button class="button" @tap="getPost">生成海报</button>
        </block>
        <block wx:else>
          <button class="button" open-type="share">分享给好友</button>
        </block>
      </view>
    </view>
</template>
<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import { baseUrl, appId} from '@/config'
  import req from '@/network'
  export default class Traceshow extends wepy.page {
    config = {
      navigationBarTitleText: '足迹占领'
    } 
    data = {
      id:'',
      declaration:'',
      scenic:'',
      name: '',
      avatar:'',
      dateString:'',
      number:'',
      isOwner:false,
      isParised:false,
      imgbox:[],
      imageUrl:""
    }
    async onLoad(e) {
      console.log(e.traceId);
      if(e.traceId){
        this.id = e.traceId;
      }
      let url = baseUrl + `/trace/getTrace?traceId=${e.traceId}`;
      const result = await req.get(url).catch((err)=>{
        console.log(err.data)})
      let trace = result.data.data;
      this.name = trace.name;
      this.avatar = trace.avatar;
      this.scenic = trace.scenic;
      this.declaration = trace.declaration;
      this.parisecount = trace.parisecount;
      this.number = trace.number;
      let date  = new Date(trace.created*1000);
      let year = date.getFullYear();
      let month = date.getMonth()+1;
      let day = date.getDate();
      this.dateString = year + '.' + month + '.' + day;
      if(trace.userId == this.$parent.globalData.user.id){
        this.isOwner = true;
      }
      await this.getImages(e.traceId)
      this.$apply();
    }

    // 分享
    onShareAppMessage(res) {
      let title = "我占领了" + this.locationName;
      let path = `pages/index`
      return {
        title: title,
        path: path
      };
    }
    async getImages(traceId){
      let url = baseUrl + `/image/get?traceId=${traceId}`;
      const result = await req.get(url).catch((err)=>{
        console.log("updateAvatarError...", err.data)})
      if(result.data.data.imageCount){
        for(var i=0;i<result.data.data.imageCount;i++){
          this.imgbox.push(baseUrl+"/static/image/"+traceId+'/'+result.data.data.images[i]) 
        }
      }
    }

    methods = {
      getPost() {
        wx.navigateTo({url: `/pages/post?content=${this.content}&dateString=${this.dateString}&locationName=${this.scenic}`})
      },
      async changeParisecount(traceId){
        if(this.isParised){
          this.parisecount--;
          this.isParised = false;
        }else{
          this.parisecount++;
          this.isParised = true;
        }
        this.$apply();
        let url = baseUrl + `/trace/updateTrace?id=${traceId}`
        const setData = {'parisecount': this.parisecount}
        await req.post(url, setData).catch((err)=>{
          console.log("updateAvatarError...", err.data)})
      }
    }
  }
</script>