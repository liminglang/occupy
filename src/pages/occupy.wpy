<style lang="less">
  .startbutton {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .weui-textarea-input{
      display:block;
      width:100%;
    }
  .text {
    width:90%;
    height: 100px;
    min-height:24px;
    background-color:#FFF;
    border-radius:5px 5px;
    overflow-y:auto;
    font-size:0.9em;
    align-content:center;
    margin-left:15px;
    margin-right:40px;
    margin-top:10px;
  }
  .photo {
    margin-top: 20px;
    width:60%;
    height:150px;
    margin-left: auto; margin-right: auto;
    border:solid 1px #000;
  }
  .cross {
    height: 30px;
    width: 30px;
    margin-top: 60px;
  }
  .confirm {
    height: 30px;
    width: 100%;
    display: table;
    margin-top: 30px;
  }
  .gps {
    height: 30px;
    width: 30px;
  }
  .flex {
    display:flex;
  }
  .up-pic {
    width: 90%;
    height: 300px;
    margin:0 auto;
    justify-content: center;
    border:1px solid #EBEBEB; 
  }
  .pic-box{  
    margin-top:5rpx;  
    flex-flow:wrap;  
    width:95%;   
  } 
  .ap-box{  
    position: relative;  
  }
  .add-pic{  
    width: 160rpx;  
    height: 160rpx;  
    margin-right: 20rpx;  
    position: relative;  
    margin: 15rpx 20rpx 20rpx 30rpx; 
  } 
  .img-de{  
    width:45rpx;  
    height:45rpx;  
    border-radius:50%;  
    position:absolute;  
    right:-41rpx;  
    top:5rpx;  
  }
  .hong-contant .teamwork-btn{
    width: 360rpx;
    height: 88rpx; 
    border-radius: 50rpx;
    color: white; 
    background-color:#14a1fd; 
    margin: 0 auto;
    margin-top: 80rpx;
    margin-bottom: 40rpx;
  }
  .add {
    margin: 20rpx;
    width: 80px;
    height: 80px;
  }
  .a{
    margin-top: 20px;
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
  }
  .selectlocation{
    border-bottom:10px solid transparent;
    border-top:10px soild transparent;
    border-left:30px soild transparent;
    border-right:30px soild transparent;
    display:inline-block;margin:0 auto;width:30px;
  }
</style>
<template>
    <view>
      <view>占领宣言：</view>
        <textarea rows="2" cols="20" style='height:100px'>{{content}}</textarea>    
      <view class='up-pic'>
        <view class='flex pic-box'>
          <block wx:key="imgbox" wx:for="{{imgbox}}">
            <view class='ap-box'>
              <view class='add-pic'>
                <image class='add-pic' src='{{item}}'></image>
                  <view class='img-de' data-deindex='{{index}}' bindtap='imgDelete'>
                    <image class='gps' src='/static/images/close_pic.jpg'></image>
                  </view>
              </view>
            </view>
          </block>
          <view class='add-pic' bindtap='uploadPhoto' wx:if="{{imgbox.length<9}}">
            <view wx:if='{{imgbox.length==0}}'>
              <image style='width:{{width}}px;height:280px' src='/static/images/add_pic.jpg'></image>
            </view>
            <view wx:else>
              <image class='add' src='/static/images/add_pic.jpg'></image>
            </view>
          </view>
        </view>
      </view>
      <view class='a'>
        <!-- <navigator url="/pages/location?imgbox={{imgbox}}"  class="weui-cell weui-cell_access"  style='margin:0 auto' hover-class="weui-cell_active"> -->
          <image class="gps" src="/static/images/address.jpg" style='margin-left:30px'></image>
          <view style='color:#8BC34A;margin-left:5px;display:inline-block'>{{city}}.{{locationName}}</view>
          <view class="weui-cell__ft_in-access selectlocation" @tap='chooseLocation'></view>
        <!-- </navigator> -->
      </view>
      <view class="confirm">
        <button  style='margin:0 auto;width:100px;' @tap="confirm">确认</button>
      </view>
      <canvas canvas-id="myCanvas" style='height:300px;width:150px;margin-top:-10000px'/>
    </view>
</template>
<script>
  import wepy from 'wepy'
  import req from '@/network'
  import { baseUrl, txMapsKey} from '@/config'
  import 'wepy-async-function'
  export default class Occupy extends wepy.page {
    config = {
      navigationBarTitleText: '足迹占领'
    }
    data = {
      content:'',
      city:'',
      locationName:'',
      longitude:'',
      latitude:'',
      iconPath:'',
      province:'',
      iconPath:'',
      width:'',
    //  imageUrl:'/static/images/ic_menu_topic_nor.jpg',
      imgbox:[]
    }
    async onLoad(e) {
      this.width = wepy.getSystemInfoSync().windowWidth*0.84;
      if(e.latitude && e.longitude){
        this.latitude = e.latitude;
        this.longitude = e.longitude;
      }
      if(e.locationName){
        this.locationName = e.locationName
      }
      if(e.imgbox){
        this.imgbox = e.imgbox.split(',')
      }
    //  this.content = this.$parent.globalData.user.name +'到此一游！';
      await this.getCityNameFromTX(e.latitude,e.longitude);
      await this.reDrawMarker(e.latitude,e.longitude);
      this.$apply();
    }
    async getCityNameFromTX(latitude, longitude) {

      const url = `https://apis.map.qq.com/ws/geocoder/v1/?location=${latitude},${longitude}&key=${txMapsKey}`;
      const res = await wepy.request({url: url, method: 'GET'}).catch((err)=>{
        console.log("error...",err.data);
        return {}
      });
      console.log(res.data.result);
      this.city = res.data.result.ad_info.city;
      this.province = res.data.result.ad_info.province;
      if(!this.locationName) {
        if(res.data.result.address_reference.famous_area){
          this.locationName = res.data.result.address_reference.famous_area.title;
        }else{
          this.locationName = res.data.result.address_reference.landmark_l2.title;
        }
      } 
    }

    async reDrawMarker(latitude,longitude){
      let self = this;
      var page = getCurrentPages()[0];
      if (page == undefined || page == null) return;
      if (!page.data.isOccupied){
        const ctx = wepy.createCanvasContext('myCanvas');
        let width = 0;
        ctx.beginPath()
        if(!page.data.isOccupiedByOther){
          ctx.arc(15, 15, 15, 0, 2 * Math.PI);
          ctx.clip();
          let avatar = await wepy.downloadFile({url:this.$parent.globalData.user.avatar}); 
          ctx.drawImage(avatar.tempFilePath, 0, 0, 30, 30);
          width = 30;
        }else{
          let index = 0;
          for(let k=0;k<page.data.markers.length;k++){
            console.log("page.data.markers[k].latitude=====,longitude=======",page.data.markers[k].latitude, page.data.markers[k].longitude ,k)
            if(page.data.markers[k].latitude == latitude && page.data.markers[k].longitude == longitude ){
              index = k;
              break;
            }
          }
          if(index){
            page.data.markers[index].avatars.push(this.$parent.globalData.user.avatar)
            for(let i=0; i < page.data.markers[index].avatars.length; i++){
              ctx.arc(15+i*30, 15, 15, 0, 2 * Math.PI);
            }
            ctx.clip();
            for(let i=0; i < page.data.markers[index].avatars.length; i++){
              let avatar = await wepy.downloadFile({url:page.data.markers[index].avatars[i]}); 
              ctx.drawImage(avatar.tempFilePath, 0+30*i, 0, 30, 30);
            }
            width = 30*page.data.markers[index].avatars.length;
          }
          
        }
        ctx.save()
        await ctx.draw(true, async ()=>{
        //绘制方法
          const res = await wepy.canvasToTempFilePath({
            x:0,
            y:0,
            width:width,
            height:30,
            destWidth:width,
            destHeight:30,
            canvasId: 'myCanvas',
            fileType: 'jpeg',
          });
          console.log("res========",res.tempFilePath)
          self.iconPath = res.tempFilePath;
          self.$apply();
        //  iconPath = res.tempFilePath
        })
      } 
    }

    methods = {
      startGame() {
        wx.navigateTo({url: '/pages/index'})
      },
      chooseLocation(){
        let self = this;
        wx.chooseLocation({
          success: function (res) {    
            self.locationName = res.name;
            self.latitude = res.latitude;
            self.longitude = res.longitude;
            self.$apply();
        //    wx.navigateBack({url: `/pages/occupy?locationName=${res.name}&latitude=${res.latitude}&longitude=${res.longitude}&imgbox=${e.imgbox}`})
          },
          fail: function (err){
           // wx.navigateBack({url: `/pages/occupy?imgbox=${e.imgbox}`})
           console.log("err============",err)
          }
        })
      },
      
      async uploadPhoto(e){
        let self = this;
        wx.showActionSheet({
          itemList: ['从相册中选择', '拍照'],
          success: async (res)=> {
            if (!res.cancel) {
              var imgbox = self.imgbox;
              console.log(imgbox)
              var picid = e.currentTarget.dataset.pic;
              console.log(picid)
              var that = this;
              var n = 9;
              if (9 > imgbox.length > 0) {
                n = 9 - imgbox.length;
              } else if (imgbox.length == 9) {
                n = 1;
              }
              const res = await wepy.chooseImage({
                count: n,
                sizeType: ['original', 'compressed'],
                sourceType: ['album', 'camera']
              })
              if (imgbox.length == 0) {
                imgbox = res.tempFilePaths
              } else if (9 > imgbox.length) {
                imgbox = imgbox.concat(res.tempFilePaths);
              } else {
                imgbox[picid] = res.tempFilePaths[0];
              }
              self.imgbox = imgbox;
              self.$apply();
            }
          }
        })
        this.$apply();
      },
      
      imgDelete(e){
        let index = e.currentTarget.dataset.deindex;
        this.imgbox.splice(index, 1);
        this.$apply();
      },

      async confirm(e) {       
        // let markerUrl = baseUrl + '/marker/updateMarker'
        // const markerData = {'latitude': this.latitude, 'longitude': this.longitude,'iconPath':this.iconPath}
        // const markerId = await req.post(markerUrl, markerData).catch((err)=>{
        //   console.log("updateAvatarError...", err.data)})
        let url = baseUrl + '/trace/addTrace';
        const setData = {'userId':this.$parent.globalData.user.id, 'latitude': this.latitude, 'longitude': this.longitude, 'scenic': this.locationName, 'declaration':this.content, 'province':this.province, 'city':this.city}
        const result = await req.post(url, setData).catch((err)=>{
          console.log("updateAvatarError...", err.data)})
        
        if(result.data.data.traceId){
          let self = this;
          let imgurl = baseUrl + `/image/save`
          for(var i = 0; i<this.imgbox.length ; i++){
            (function(i){
              wx.uploadFile({
                url: baseUrl + `/image/save?id=${result.data.data.traceId}`,
                filePath: self.imgbox[i],
                name: 'image',
                formData:{'number':i},
                header: {
                  'content-type':'multipart/form-data'
              },
                success(res){
                  console.log(res)
                }
              })
            })(i)
          }   
        }
        var page = getCurrentPages()[0];
        if (page == undefined || page == null) return;
        page.afterOccupy(this.iconPath);
        wx.navigateTo({url: `/pages/traceshow?traceId=${result.data.data.traceId}&latitude=${this.latitude}&longitude=${this.longitude}`})
      }
    }
  }
</script>