<style lang="less">
  .confirm {
    position: fixed;
    width:60%;
    background:#019B79;
    border-radius:35px;
    color:#ffff;
    bottom:5%;
    left:20%;
    height:7%;
  }
  .canvas {
    width: 100%;
    position: absolute;
   /// height: 100px;
    //bottom: 50px;
  }
</style>
<template>
    <view>
      <canvas canvas-id="myCanvas" class="canvas" style='height:{{canvasHeight}}px'/>
      <button class="confirm" @tap="saveImageToPhotosAlbum">保存到手机</button>
    </view>
</template>
<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import { baseUrl, appId} from '@/config'
  import req from '@/network'
  export default class Post extends wepy.page {
    config = {
      navigationBarTitleText: '旅行的我',
      navigationBarBackgroundColor:'#019B79'
    }
    data = {
      declaration:'',
      locationName:'',
      city:'',
      number:'',
      nickName: '',
      avatar:'',
      dateString:'',
      imageUrl:'',
      imgbox:[],
      canvasHeight:100
    }
    async onLoad(e) {
      this.nickName = this.$parent.globalData.user.name;
      this.avatar = this.$parent.globalData.user.avatar;
      await this.getTraceInfo(e.traceId)
      const ctx = wepy.createCanvasContext('myCanvas');
      const width = wepy.getSystemInfoSync().windowWidth;
      const height = wepy.getSystemInfoSync().windowHeight*0.93;
      this.canvasHeight = height;
      let self = this;
      console.log("canvasHeight===========",this.canvasHeight)
     // ctx.rect(5,5,width-10,height-10)
     // ctx.stroke()
    //   //const radius = width * 105/430
      ctx.beginPath()
      ctx.setFontSize(13);
      ctx.setFillStyle('#019B79')
      ctx.fillText(this.nickName,100,35);
      ctx.fillText("第"+this.number + '个占领者',30,height-70)
      ctx.fill()
      ctx.setFillStyle('#939393')
      ctx.fillText(this.declaration,100,65);
      ctx.fillText(this.dateString,30, height-120);
      ctx.fillText(this.city + ' . '+ this.locationName,30, height-95);
      ctx.fill()
      ctx.save();
      ctx.restore();
      ctx.beginPath()
      let image = '/static/images/add_pic.jpg'
      if(this.imgbox[0]){
        image = await wepy.downloadFile({url:this.imgbox[0]});
        image = image.tempFilePath;
      }
      ctx.drawImage(image,0, 85, width, height-230);
     // ctx.drawImage("/static/images/address.jpg",10, height-55, 13, 20);
      ctx.stroke()
      ctx.drawImage("/static/images/qrcode.jpg", width-110, height-135, 80, 80);
      ctx.save();
      ctx.beginPath()
      ctx.arc(45, 45, 35, 0, 2 * Math.PI);
      ctx.clip();
      let avatar = await wepy.downloadFile({url:this.avatar}); 
      ctx.drawImage(avatar.tempFilePath, 10, 10, 70, 70);
      ctx.save()
      ctx.draw(true, async ()=>{
        const res = await wepy.canvasToTempFilePath({
          x:0,
          y:0,
          width:width,
          height:height,
          destWidth:width,
          destHeight:height,
          canvasId: 'myCanvas',
          fileType: 'jpeg'
        });
        self.imageUrl = res.tempFilePath;
        self.$apply();
      })
    }
    async getImages(traceId){
      let url = baseUrl + `/image/get?traceId=${traceId}`;
      const result = await req.get(url).catch((err)=>{
        console.log("updateAvatarError...", err.data)})
      if(result.data.data.imageCount){
        for(var i=0;i<result.data.data.imageCount;i++){
          this.imgbox.push(baseUrl+"/static/image/"+traceId+'/'+result.data.data.images[i]) 
        }
      }
      this.$apply();
    }
    async getTraceInfo(traceId){
      let url = baseUrl + `/trace/getTrace?traceId=${traceId}`;
      const result = await req.get(url).catch((err)=>{
        console.log(err.data)})
      let trace = result.data.data;
      this.name = trace.name;
      this.locationName = trace.scenic;
      this.city = trace.city;
      this.declaration = trace.declaration;
      this.number = trace.number;
      let date  = new Date(trace.created*1000);
      let year = date.getFullYear();
      let month = date.getMonth()+1;
      let day = date.getDate();
      this.dateString = year + '.' + month + '.' + day;
      this.getImages(traceId)
    }

    methods = {
      async saveImageToPhotosAlbum(){  
        const saveRes = await wepy.saveImageToPhotosAlbum({
          filePath: this.imageUrl
        }).catch((err)=>{
          return false;
        });
        if(saveRes){
          wepy.showToast({
            title: "已保存至相册",
            icon: "none"
          });
        }
        else{
          wepy.showToast({
            title: "保存失败",
            icon: "none"
          });
          wepy.showLoading({
            title: '加载中',
            mask: true
          });
          const setting = await wepy.getSetting();
          if(setting.authSetting["scope.writePhotosAlbum"] === false){
            this.showOpenSetting = true;
            this.$apply();
          }
          wepy.hideLoading();
        }
      }
    }
  }
</script>