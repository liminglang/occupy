<style lang="less">
  .container {
    height: 100%;
    width: 100%;
  }
  
  .list {
    margin-top: 15px;
    
  }
  .gps {
    height: 30px;
    width: 30px;
  }
  .image {
    width: 15%;
    border-radius: 50%;
  }
  .content {
    flex: 1;
    margin-left: 10px;
    text-overflow:ellipsis;
    margin-bottom:10px;
  }
  .declaration {
    flex: 1;
    width: 150px;
    margin-left: 10px;
    text-overflow:ellipsis;
    overflow: hidden;
    text-overflow:ellipsis;
    white-space: nowrap;
  }
  .location{
    flex: 1;
    margin-left: 10px;
    display:inline-block;
    color:#8BC34A;
    display: -webkit-box;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
    overflow: hidden;

  }
  .address-list {
    width: 100%;
    box-sizing: border-box;
    padding-left: 31.25rpx;
    background: #fff
      url(http://yanxuan.nosdn.127.net/hxm/yanxuan-wap/p/20161201/style/img/icon-normal/address-bg-bd30f2bfeb.png)
      0 0 repeat-x;
    background-size: auto 10.5rpx;
    margin-bottom: 90rpx;
  }
  .text {
    display:inline-block;
    margin-left: 10px;
    margin-bottom:20px;
  }
 .heart{
    display:inline-block;
    margin-right: 10px;
    height: 25px;
    width: 25px;
    margin-left: 20px;
  }
  .slogon {
    width: 100%;
    text-align:center;
  }
  .a{
    margin-top: 20px;
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  .b{
    display:inline-block;
    margin-right: 10px;
  }
  .button{
    background-color:#8BC34A;
    color:#ffff;
    width: 100%
  }
</style>
<template>
  <view>
    <view class='slogon'>获赞数越多排序越靠前,快邀请好友助力吧！</view>
    <button class="button" open-type="share">邀请好友助力</button>
    <repeat for="{{list}}" key="index" index="index" item="item">
      <view class="list">
        <view class="a">
          <view style='margin-left:5px;margin-right:5px'>{{index+1}}</view>
          <image class="image" mode="aspectFit" src="{{item.avatar}}" @tap='showTrace({{item.id}})'></image>
          <view class='text'>
            <view class='content'>{{item.name}}</view>
            <view class='declaration'>{{item.declaration}}</view>
            <view class = 'b'>
           <!-- 、   <image class="gps" src="/static/images/address.jpg"></image> -->
              <view class='location'>{{item.city}} . {{item.scenic}}</view>
            </view>
          </view>
          <view class='b'>
            <image class="heart" mode="aspectFit" src="{{item.imageUrl}}" @tap='changeParisecount({{item.id}},{{index}})'></image>
            <view style='display:inline-block;margin-left:5px;'>{{item.parisecount}}</view>
            <view class='text'>第{{item.number}}个占领者</view>
          </view>
        </view>
      </view>
    </repeat>
  </view>
    <!-- <view class="weui-cell">
      <navigator url="/pages/location"  class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__hd">
          <image class="gps" src="/static/images/address.png"></image>
        </view>
        <view class="name" style='color:#c1c40d'>{{locationName}}</view>
        <view class='name' style='margin-right:20px'>{{dateString}}</view>
      </navigator>
    </view>
  </view> -->
</template>
<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import { baseUrl, appId} from '@/config'
  import req from '@/network'
  import _ from 'underscore'
  export default class Tracelist extends wepy.page {
    config = {
      navigationBarTitleText: '足迹占领'
    }
    data = {
      scenic:'',
      list:[],
      imageUrl:"/static/images/heart.jpg"
    } 
    async onLoad(e) {
      if(e.scenic){
        this.scenic = e.scenic;
      }
      let url = baseUrl + `/trace/getList?latitude=${e.latitude}&longitude=${e.longitude}`;
      //console.log(this.latitude,this.longitude,this.range_x,this.range_y)
      const traces = await req.get(url).catch((err)=>{
        console.log("updateAvatarError...", err.data)})
      let self = this;
      if (traces.data.data) {
        self.list = traces.data.data;
        for(var i = 0;i<self.list.length;i++){
          (function(i){
            wx.getStorage({
              key:self.$parent.globalData.user.id+String(self.list[i].id),
              success (res){
                self.list[i].imageUrl = "/static/images/zan.jpg";
                self.list[i].isParised = true;
                self.$apply();
              },
              fail (){
                self.list[i].imageUrl = "/static/images/heart.jpg";
                self.list[i].isParised = false;
                self.$apply();
              }
            })
          })(i)
          
        this.$apply();
        } 
      }
    }
    methods = {
      startGame() {
        wx.navigateTo({url: '/pages/index'})
      },
      showTrace(traceId){
        wx.navigateTo({url: `/pages/traceshow?traceId=${traceId}`})
      },
      async changeParisecount(traceId, index){
        console.log("index==========",index)
        if(this.list[index].isParised){
          console.log("wowwwefewffwfwefwe")
          this.list[index].parisecount--;
          this.list[index].isParised = false;
          wx.setStorage({
            key:this.$parent.globalData.user.id + String(this.list[index].id),
            data:0
          })
          this.list[index].imageUrl= "/static/images/heart.jpg"
        }else{
          this.list[index].parisecount++;
          this.list[index].isParised = true;
          wx.setStorage({
            key:this.$parent.globalData.user.id + String(this.list[index].id),
            data:1
          })
          this.list[index].imageUrl = "/static/images/zan.jpg"
        }
        this.$apply();
        let url = baseUrl + `/trace/updateTrace?id=${traceId}`
        const setData = {'parisecount': this.list[index].parisecount}
        await req.post(url, setData).catch((err)=>{
          console.log("updateAvatarError...", err.data)})
      }
    }
  }
</script>