<style lang="less">
@import "weui.wxss";
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { baseUrl, appId} from '@/config'
import req from '@/network'
import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/ablum',
      'pages/trace',
      'pages/occupy',
      'pages/location',
      'pages/traceshow',
      'pages/post',
      'pages/tracelist',
      'pages/edittrace',
      'pages/selectlocation'
    ],
    tabBar: {
      color: '#666',
      selectedColor: '#5e9bf4',
      backgroundColor: '#fff',
    //  font:17px,
    //  borderStyle: 'black',
      list: [
      {
        pagePath: 'pages/index',
      //  selectedIconPath: './images/tabbars/me_pressed.png',
      //  iconPath: './images/tabbars/me.png',
        text: '足迹地图',
      },
      {
        pagePath: 'pages/trace',
      //  selectedIconPath: './images/tabbars/home_pressed.png',
    //    iconPath: './images/tabbars/home.png',
        text: '我的足迹',
      },
      {
        pagePath: 'pages/ablum',
      //  selectedIconPath: './images/tabbars/home_pressed.png',
    //    iconPath: './images/tabbars/home.png',
        text: '我的相册',
      }]
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix');
    this.use('promisify');
  }
  onLaunch() {
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async login(e) {
    if(!e){
      e = {}
    }
    const self = this
    let globalData = self.globalData
    let needs_login = false
    if (!globalData.userInfo) {
      const setting = await wepy.getSetting()
      if (setting.authSetting['scope.userInfo']) {
        const info = await wepy.getUserInfo()
        self.globalData.userInfo = info.userInfo
      }
    }
    if (!globalData.user) {
      globalData.user = {}
    }
    if (!globalData.user.id || !globalData.user.auth_token) {
      needs_login = true
    }

    if (!globalData.is_login) {
      needs_login = true
    }
    if(needs_login){
      const data = await wepy.login()
      const old_user_id = globalData.user._id || ''
      const old_auth_token = globalData.user.auth_token || ''
      let url = baseUrl+`/auth/loginByWeixin`
      const setData = {'code':data.code}
      const res = await req.post(url,setData).catch((err) => {
        console.log("cache error...", err);
        return {}
      })
      if(res){
        globalData.user.name = res.data.data.userInfo.name
        globalData.user.gender = res.data.data.userInfo.gender
        globalData.user.avatar = res.data.data.userInfo.avatar
        globalData.user.id = res.data.data.userInfo.id
      }
    }
  }
}
</script>
